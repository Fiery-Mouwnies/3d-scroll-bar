/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useMemo, useContext, createContext, forwardRef } from 'react'
import { useGLTF, Merged } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { GroupProps } from '@react-three/fiber'

// ... (type definitions remain the same)
type GLTFResult = GLTF & { /* ... */ };

const context = createContext(null)

export function Instances({ children, ...props }) {
  const { nodes } = useGLTF('/granola_bar_3d.glb') as GLTFResult
  const instances = useMemo(
    () => ({
        PCubeaiStandardSurface: nodes.pCube3_aiStandardSurface1_0,
        PCubeaiStandardSurface1: nodes.pCube6_aiStandardSurface2_0,
        // ... all other mappings
        PCubeaiStandardSurface324: nodes.pCube329_aiStandardSurface3_0,
    }),
    [nodes]
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export const Energybar = forwardRef<THREE.Group, GroupProps>((props, ref) => {
  const instances = useContext(context)
  return (
    <group {...props} dispose={null} ref={ref}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="2e7513e960664aedaff860fe2491e0b6fbx" rotation={[Math.PI / 2, 0, 0]}>
            <group name="RootNode">
              <group name="group5">
                <group name="group4" rotation={[-0.048, 0.025, 0.139]}>
                  {/* --- FIX IS HERE: Removed the hardcoded scale --- */}
                  <group name="pCube3">
                    <instances.PCubeaiStandardSurface name="pCube3_aiStandardSurface1_0" />
                  </group>
                  {/* ... rest of the model ... */}
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
})

useGLTF.preload('/granola_bar_3d.glb')